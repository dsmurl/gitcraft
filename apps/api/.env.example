# GitHub OAuth App credentials (required)
GITHUB_CLIENT_ID=your_client_id
GITHUB_CLIENT_SECRET=your_client_secret

# Clerk keys (required by Clerk middleware)
# Get this from Clerk Dashboard -> API Keys -> Publishable Key
CLERK_PUBLISHABLE_KEY=pk_test_your_publishable_key
CLERK_SECRET_KEY=sk_test_your_secret_key

# Web app origin(s) allowed for CORS
# Comma-separated list of origins allowed to call the API with credentials/Authorization.
# Example: http://localhost:5173,https://app.your-domain.tld
WEB_ORIGIN=http://localhost:5173

# API server port (defaults to 3001 if not set)
API_PORT=3001

# Database configuration (choose ONE of the options below)
# Note: If BOTH TURSO_DATABASE_URL and SQLITE_FILE are set, Turso (TURSO_DATABASE_URL) takes precedence.

# Option A: Turso (libsql over HTTPS)
# Provide the Turso URL and auth token to use the hosted database.
# When TURSO_DATABASE_URL is set, the API will prefer Turso mode.
TURSO_DATABASE_URL=
TURSO_AUTH_TOKEN=

# Option B: Local SQLite file (dev only)
# If TURSO_DATABASE_URL is NOT set and SQLITE_FILE is set, the API uses a local SQLite file.
# For this workspace, point to libs/drizzle/local.sqlite (used by drizzle generate/migrate).
# Example (relative to apps/api): ../../libs/drizzle/local.sqlite
# Tip: You can also use an absolute path to avoid CWD issues.
SQLITE_FILE=../../libs/drizzle/local.sqlite

# Optional counters (used by test routes)
COUNTER_INITIAL=0
COUNTER_STEP=1