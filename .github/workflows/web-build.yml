name: Web Build and Deploy (S3 + CloudFront)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Target environment for env-scoped secrets/variables
        required: true
        default: dev
        type: choice
        options:
          - dev
          - staging
          - prod

permissions:
  contents: read

concurrency:
  group: web-deploy-${{ inputs.environment }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      VITE_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
      VITE_API_URL: ${{ vars.VITE_API_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.14.2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install deps (workspace)
        run: pnpm -w install

      - name: Build web (Nx)
        run: pnpm nx run web:build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: apps/web/dist
          if-no-files-found: error

  deploy:
    name: Deploy to S3 + Invalidate CloudFront
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write # for GitHub OIDC -> AWS
      contents: read
    steps:
      - name: Checkout (for utility scripts if any)
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Who am I?
        run: aws sts get-caller-identity

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: dist

      # Sync all non-HTML assets with long, immutable caching
      - name: Sync assets to S3 (immutable cache)
        run: |
          aws s3 sync dist s3://${{ vars.WEB_BUCKET }} \
            --delete \
            --exclude "index.html" \
            --cache-control "public, max-age=31536000, immutable"

      # Upload index.html separately with no-cache to ensure fast updates
      - name: Upload index.html (no-cache)
        run: |
          aws s3 cp dist/index.html s3://${{ vars.WEB_BUCKET }}/index.html \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html"

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/index.html" "/" "/assets/*"
